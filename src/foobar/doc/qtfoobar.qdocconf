include($QT_INSTALL_DOCS/global/qt-module-defaults.qdocconf)
# alias.i = e

project     = QtFoobar
description = QtFoobar Documentation
version     = 1.0.0

exampledirs = ../../../examples \
              snippets
imagedirs   = images

headerdirs  = ..
sourcedirs  = ..

#Cpp.ignoretokens = \
#    QT_BEGIN_HEADER \
#    QT_END_HEADER \
#    Q_ENUMS \
#    Q_INVOKABLE \
#    QT_LOGGER_BEGIN_NAMESPACE \
#    QT_LOGGER_END_NAMESPACE \
#    Q_LOGGER_EXPORT

# The following parameters are for creating a qhp file, the qhelpgenerator
# program can convert the qhp file into a qch file which can be opened in
# Qt Assistant and/or Qt Creator.

# Defines the name of the project. You cannot use operators (+, =, -) in
# the name. Properties for this project are set using a qhp.<projectname>.property
# format.
qhp.projects = QtFoobar

# Sets the name of the output qhp file.
qhp.QtFoobar.file = qtfoobar.qhp

# Namespace for the output file. This namespace is used to distinguish between
# different documentation files in Creator/Assistant. The namespace ends with
# a version being a number containing a major, minor and revision element.
# E.g. version 1.0 becomes 100.
qhp.QtFoobar.namespace = com.qt-project.qtfoobar.100

# Title for the package, will be the main title for the package in
# Assistant/Creator.
qhp.QtFoobar.indexTitle = QtFoobar Reference Documentation

# Extra files to add to the output which are not linked to from anywhere
# using a qdoc \l command.
#qhp.QtFoobar.extraFiles = style/style.css \
#                            index.html

# Only update the name of the project for the next variables.
qhp.QtFoobar.virtualFolder = qdoc
qhp.QtFoobar.subprojects = classes
qhp.QtFoobar.subprojects.classes.title = Classes
qhp.QtFoobar.subprojects.classes.selectors = class fake:headerfile
qhp.QtFoobar.subprojects.classes.sortPages = true


# Do NOT change the variables after this line unless you know what you are doing.

outputdir = html
outputformats = HTML

examples.fileextensions = "*.cpp *.h *.js *.svg *.xml *.ui *.qml"
examples.imageextensions = "*.png *.jpeg *.jpg *.gif *.mng"
headers.fileextensions = "*.h *.ch *.h++ *.hh *.hpp *.hxx"
sources.fileextensions = "*.cpp *.qdoc *.mm *.qml"

